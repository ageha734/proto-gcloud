name: '[CI] Proto Tools'

on:
    push:
        branches:
        - prerelease
        paths:
        - '.github/workflows/ci.yml'
        - 'src/**'
        - 'tests/**'
        - 'Cargo.toml'
    pull_request:
        branches:
        - prerelease
        paths:
        - '.github/workflows/ci.yml'
        - 'src/**'
        - 'tests/**'
        - 'Cargo.toml'

jobs:
    run-format:
        runs-on: ubuntu-24.04

        steps:
        - name: Checkout Repository
          uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

        - name: Setup Rust
          uses: moonrepo/setup-rust@ede6de059f8046a5e236c94046823e2af11ca670 # v1.2.2
          with:
              channel: '1.90.0'
              components: rustfmt
              cache: true

        - name: Run Format
          run: cargo fmt --all --check

    run-lint:
        runs-on: ubuntu-24.04

        steps:
        - name: Checkout Repository
          uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

        - name: Setup Rust
          uses: moonrepo/setup-rust@ede6de059f8046a5e236c94046823e2af11ca670 # v1.2.2
          with:
              channel: '1.90.0'
              components: clippy
              cache: true

        - name: Run Lint
          run: cargo clippy --workspace --all-targets

    run-test:
        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-24.04, windows-2025, macos-15]
            fail-fast: false

        steps:
        - name: Checkout Repository
          uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

        - name: Setup Rust
          uses: moonrepo/setup-rust@ede6de059f8046a5e236c94046823e2af11ca670 # v1.2.2
          with:
              channel: '1.90.0'
              targets: wasm32-wasip1
              bins: cargo-nextest
              cache: false

        - name: Setup Toolchain
          uses: moonrepo/setup-toolchain@827700d97fe7dd1c3030018529e43e23c377c308 # v0.5.0

        - name: Build Proto Plugin
          uses: moonrepo/build-proto-plugin@60ff6f68ae0e0b4dc4b959835cd84b8d535403c2 # v0.4.2

        - name: Run Test
          run: cargo nextest run --no-default-features

    run-build:
        needs: [run-format, run-lint, run-test]

        runs-on: ${{ matrix.os }}

        strategy:
            matrix:
                os: [ubuntu-24.04, windows-2025, macos-15]
            fail-fast: false

        steps:
        - name: Checkout Repository
          uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

        - name: Setup Rust
          uses: moonrepo/setup-rust@ede6de059f8046a5e236c94046823e2af11ca670 # v1.2.2
          with:
              targets: wasm32-wasip1
              channel: '1.90.0'
              cache: true

        - id: build
          name: Build Proto Plugin
          uses: moonrepo/build-wasm-plugin@60ff6f68ae0e0b4dc4b959835cd84b8d535403c2 # v0.4.2

    run-e2e:
        needs: [run-format, run-lint, run-test]

        runs-on: ubuntu-24.04

        steps:
        - name: Checkout Repository
          uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

        - name: Setup Proto
          uses: moonrepo/setup-proto@60ff6f68ae0e0b4dc4b959835cd84b8d535403c2 # v0.4.2

        - name: Run E2E Tests
          run: proto install gcloud-test

        - name: Run Versions Test
          run: gcloud-test versions

    run-approval:
        needs: [run-build, run-e2e]
        if: github.event_name == 'pull_request'

        runs-on: ubuntu-24.04

        steps:
        - name: Checkout Repository
          uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

        - name: Comment on PR when tests pass
          run: |
              comment_body="Tests passed! Please review."
              reviewers=$(echo '${{ toJson(github.event.pull_request.requested_reviewers.*.login) }}' | jq -r '.[]' 2>/dev/null || echo "")
              for reviewer in $reviewers; do
                comment_body+=" @$reviewer"
              done
              curl -X POST \
                -H "Authorization: token $GH_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                -d "{\"body\": \"$comment_body\"}" \
                "https://api.github.com/repos/$GH_REPO/issues/$NUMBER/comments"
          env:
              GH_TOKEN: ${{ secrets.PRE_GITHUB_TOKEN }}
              GH_REPO: ${{ github.repository }}
              NUMBER: ${{ github.event.pull_request.number }}
          if: success()
